const SOURCE_COUNTRIES = {
  EN: [
    "Afghanistan",
    "Antigua and Barbuda",
    "Armenia",
    "Angola",
    "Argentina",
    "Australia",
    "Azerbaijan",
    "Bosnia and Herzegovina",
    "Bangladesh",
    "Belgium",
    "Burkina Faso",
    "Bulgaria",
    "Bahrain",
    "Burundi",
    "Benin",
    "Brunei",
    "Bolivia",
    "Brazil",
    "Bahamas",
    "Bhutan",
    "Botswana",
    "Belarus",
    "Belize",
    "Canada",
    "Democratic Republic of the Congo",
    "Central African Republic",
    "Republic of the Congo",
    "Switzerland",
    "Ivory Coast",
    "Chile",
    "Cameroon",
    "China",
    "Colombia",
    "Costa Rica",
    "Cuba",
    "Cape Verde",
    "Cyprus",
    "Czech Republic",
    "Germany",
    "Djibouti",
    "Denmark",
    "Dominica",
    "Dominican Republic",
    "Algeria",
    "Ecuador",
    "Estonia",
    "Egypt",
    "Eritrea",
    "Spain",
    "United Arab Emirates",
  ],
  PT: [
    "Emirados Árabes Unidos",
    "Afeganistão",
    "Antígua e Barbuda",
    "Armênia",
    "Angola",
    "Argentina",
    "Austrália",
    "Azerbaijão",
    "Bósnia e Herzegovina",
    "Bangladesh",
    "Bélgica",
    "Burkina Faso",
    "Bulgária",
    "Bahrein",
    "Burundi",
    "Benim",
    "Brunei",
    "Bolívia",
    "Brasil",
    "Bahamas",
    "Butão",
    "Botsuana",
    "Bielorrússia",
    "Belize",
    "Canadá",
    "República Democrática do Congo",
    "República Centro Africana",
    "República do Congo",
    "Suíça",
    "Costa do Marfim",
    "Chile",
    "Camarões",
    "China",
    "Colômbia",
    "Costa Rica",
    "Cuba",
    "Cape Verde",
    "Chipre",
    "República Checa",
    "Alemanha",
    "Djibuti",
    "Dinamarca",
    "Dominica",
    "República Dominicana",
    "Argélia",
    "Equador",
    "Estônia",
    "Egito",
    "Eritreia",
    "Espanha",
    "Etiópia",
    "Finlândia",
    "Fiji",
    "Estados Federados da Micronésia",
    "França",
    "Gabão",
    "Reino Unido",
    "Geórgia",
    "Gana",
    "Guiné",
    "Guiné Equatorial",
    "Grécia",
    "Guatemala",
    "Guinea Bissau",
    "Guiana",
    "Honduras",
    "Croácia",
    "Haiti",
    "Hungria",
    "Indonésia",
    "Irlanda",
    "Israel",
    "Índia",
    "Iraque",
    "Irã",
    "Islândia",
    "Itália",
    "Jamaica",
    "Jordânia",
    "Japão",
    "Quênia",
    "Quirguistão",
    "Camboja",
    "Kiribati",
    "Comores",
    "São Cristóvão e Nevis",
    "Coréia do Norte",
    "Coreia do Sul",
    "Kuwait",
    "Cazaquistão",
    "Laos",
    "Líbano",
    "Santa Lúcia",
    "Listenstaine",
    "Sri Lanka",
    "Libéria",
    "Lesoto",
    "Lituânia",
    "Luxemburgo",
    "Letônia",
    "Líbia",
    "Marrocos",
    "Moldávia",
    "Montenegro",
    "Madagáscar",
    "Ilhas Marshall",
    "Macedônia do Norte",
    "Malí",
    "Mianmar",
    "Mongólia",
    "Mauritânia",
    "Malta",
    "Maurício",
    "Maldivas",
    "Malawi",
    "México",
    "Malásia",
    "Moçambique",
    "Namíbia",
    "Níger",
    "Nigéria",
    "Nicarágua",
    "Holanda",
    "Noruega",
    "Nepal",
    "Nauru",
    "Nova Zelândia",
    "Omán",
    "Panamá",
    "Peru",
    "Papua Nova Guiné",
    "Filipinas",
    "Paquistão",
    "Portugal",
    "Palau",
    "Paraguai",
    "Catar",
    "Romênia",
    "Sérvia",
    "Rússia",
    "Ruanda",
    "Arábia Saudita",
    "Ilhas Salomão",
    "Seicheles",
    "Sudão",
    "Suécia",
    "Cingapura",
    "Eslovênia",
    "Eslováquia",
    "Serra Leoa",
    "São Marinho",
    "Senegal",
    "Suriname",
    "Sudão do Sul",
    "El Salvador",
    "Síria",
    "Chade",
    "Togo",
    "Tailândia",
    "Tajiquistão",
    "Timor Leste",
    "Turcomenistão",
    "Tunísia",
    "Chegado",
    "Turquía",
    "Trindade e Tobago",
    "Tuvalu",
    "Taiwan",
    "Tanzânia",
    "Ucrânia",
    "Uganda",
    "Estados Unidos",
    "Uruguai",
    "Uzbequistão",
    "Cidade do Vaticano",
    "São Vicente e Granadinas",
    "Vietnã",
    "Vanuatu",
    "Samoa",
    "Iémen",
    "África do Sul",
    "Zâmbia",
    "Zimbábue",
    "A Gâmbia",
    "São Tomé and Príncipe",
    "Suazilandia",
    "Afeganistão",
  ],
  ES: [
    "Emiratos Árabes Unidos",
    "Afganistán",
    "Antigua and Barbuda",
    "Armenia",
    "Angola",
    "Argentina",
    "Australia",
    "Azerbaiyán",
    "Bosnia y Herzegovina",
    "bangladesh",
    "Bélgica",
    "Burkina Faso",
    "Bulgaria",
    "Baréin",
    "Burundi",
    "Benín",
    "Brunéi",
    "Bolivia",
    "Brasil",
    "bahamas",
    "Bután",
    "Botsuana",
    "Bielorrusia",
    "Belice",
    "Canada",
    "República Democrática del Congo",
    "República Centroafricana",
    "República del Congo",
    "Suiza",
    "Costa de Marfil",
    "Chile",
    "Camerún",
    "Porcelana",
    "Colombia",
    "Costa Rica",
    "Cuba",
    "Cape Verde",
    "Chipre",
    "República Checa",
    "Alemania",
    "Yibuti",
    "Dinamarca",
    "Dominica",
    "República Dominicana",
    "Argelia",
    "Ecuador",
    "Estonia",
    "Egipto",
    "Eritrea",
    "España",
    "Etiopía",
    "Finlandia",
    "Fiyi",
    "Estados Federados de Micronesia",
    "Francia",
    "Gabón",
    "Reino Unido",
    "Georgia",
    "Ghana",
    "Guinea",
    "Guinea Ecuatorial",
    "Grecia",
    "Guatemala",
    "Guinea Bisáu",
    "Guayana",
    "Honduras",
    "Croacia",
    "Haití",
    "Hungría",
    "Indonesia",
    "Irlanda",
    "Israel",
    "India",
    "Irak",
    "Irán",
    "Islandia",
    "Italia",
    "Jamaica",
    "Jordán",
    "Japón",
    "Kenia",
    "Kirguistán",
    "Camboya",
    "Kiribati",
    "Comoras",
    "San Cristóbal y Nieves",
    "Corea del Norte",
    "Corea del Sur",
    "Kuwait",
    "Kazajstán",
    "Laos",
    "Líbano",
    "Saint Lucia",
    "Liechtenstein",
    "Sri Lanka",
    "Liberia",
    "Lesoto",
    "Lituania",
    "luxemburgo",
    "letonia",
    "Libia",
    "Marruecos",
    "Moldavia",
    "montenegro",
    "Madagascar",
    "Islas Marshall",
    "Macedonia del Norte",
    "Malí",
    "Birmania",
    "Mongolia",
    "Mauritania",
    "Malta",
    "Mauricio",
    "Maldivas",
    "Malaui",
    "México",
    "Malasia",
    "Mozambique",
    "Namibia",
    "Níger",
    "Nigeria",
    "Nicaragua",
    "Países Bajos",
    "Noruega",
    "Nepal",
    "Nauru",
    "Nueva Zelanda",
    "Omán",
    "Panamá",
    "Perú",
    "Papúa Nueva Guinea",
    "Filipinas",
    "Pakistán",
    "Portugal",
    "Palau",
    "Paraguay",
    "Katar",
    "Rumania",
    "Serbia",
    "Rusia",
    "Ruanda",
    "Arabia Saudita",
    "Islas Salomón",
    "Seychelles",
    "Sudán",
    "Suecia",
    "Singapur",
    "Eslovenia",
    "Eslovaquia",
    "Sierra Leone",
    "San Marino",
    "Senegal",
    "Surinam",
    "Sudán del Sur",
    "El Salvador",
    "Siria",
    "Chad",
    "Togo",
    "Tailandia",
    "Tayikistán",
    "Timor Oriental",
    "turkmenistán",
    "Túnez",
    "Llegado",
    "Turquía",
    "Trinidad y Tobago",
    "Tuvalu",
    "Taiwán",
    "Tanzania",
    "Ucrania",
    "Uganda",
    "Estados Unidos",
    "Uruguay",
    "Uzbekistán",
    "Ciudad del Vaticano",
    "San Vicente y las Granadinas",
    "Vietnam",
    "Vanuatu",
    "samoa",
    "Yemen",
    "Sudáfrica",
    "Zambia",
    "Zimbabue",
    "Gambia",
    "Santo Tomé y Príncipe",
    "Suazilandia",
    "Afganistán",
  ],
};

const SCREEN_WIDTH = 411; // width of the screen in pixels
const LETTER_WIDTH = 30; // width of the letter in pixels
const SPACE_WIDTH = 20; // width of the space between the words
const GAP_WIDTH = 10; // width of the gap between the letters
const MIN_LETTER_WIDTH = 25; // minimun width of the letters

function setup(word) {
  return word.split(" ");
}

function requiredWidth(word, letterWidth = LETTER_WIDTH) {
  const words = word.split(" ");
  const spaces = words.length - 1;
  const letters = word.split("").length - spaces;
  const gaps = words.reduce((acc, word) => acc + word.length - 1, 0);
  // it returns the required width for the given word
  const reqWidth =
    letterWidth * letters + GAP_WIDTH * gaps + SPACE_WIDTH * spaces;
  return reqWidth;
}

function canFit(word, currentWidth, letterWidth, currentLine) {
  // it calculates the required width for the word
  const reqWidth = requiredWidth(word, letterWidth);
  const remainderWidth = currentWidth - reqWidth;
  // if there is room for the word
  return remainderWidth > 0
    ? [remainderWidth, letterWidth, currentLine]
    : // if the word itself won't fit (it should decrease the width of the letter)
    reqWidth > SCREEN_WIDTH
    ? canFit(word, currentWidth, --letterWidth, currentLine)
    : // if the word fits but not on the same line, it moves to a new line
      canFit(word, SCREEN_WIDTH, letterWidth, ++currentLine);
}

function keepGoing(words, word, currentWidth, currentLine) {
  if (words.length > 1 && words[words.length - 1] !== word) {
    currentWidth -= SPACE_WIDTH;

    // it is necessary to move to a new line
    if (currentWidth <= 0) {
      currentLine++;
      currentWidth = SCREEN_WIDTH; // resets the currentWidth
    }
  }
  return [currentWidth, currentLine];
}

function calculate(
  words,
  currentWidth,
  letterWidth,
  maxLine = 1,
  currentLine = 1
) {
  const rows = [];
  for (const word of words) {
    // it calculates if the word is going to fit in the current line
    [currentWidth, letterWidth, currentLine] = canFit(
      word,
      currentWidth,
      letterWidth,
      currentLine
    );

    // it separates the words
    rows[currentLine - 1] !== undefined
      ? (rows[currentLine - 1] += " " + word)
      : rows.push(word);

    // it continues if there are more words
    [currentWidth, currentLine] = keepGoing(
      words,
      word,
      currentWidth,
      currentLine
    );
  }

  // if the letter width is smaller than the current letter width
  return letterWidth < MIN_LETTER_WIDTH
    ? calculate(words, SCREEN_WIDTH, LETTER_WIDTH, ++maxLine)
    : // if the current line is bigger than the limit of lines
    currentLine >= maxLine
    ? calculate(words, SCREEN_WIDTH, --letterWidth, maxLine)
    : [rows, letterWidth, currentLine];
}

function run(word) {
  const reqWidth = requiredWidth(word);
  // if the width of the word is less than the max width, it finishes
  if (reqWidth > SCREEN_WIDTH) {
    const words = setup(word);
    // it starts the process
    const [rows, letterWidth, currentLine] = calculate(
      words,
      SCREEN_WIDTH,
      LETTER_WIDTH
    );
    console.log(rows, letterWidth);
  } else {
    console.log([word], "should fit");
  }
}

for (const country of SOURCE_COUNTRIES.EN) {
  run(country);
}
